{"version":3,"file":"index.umd.js","sources":["../src/Hooks.js","../src/RouterContainer.js"],"sourcesContent":["import * as React from 'react';\nimport {\n  useContext,\n  useMemo,\n  useEffect,\n  useState\n} from 'react';\nimport {Router} from 'groutcho';\n\nconst RouterContext = React.createContext();\n\nfunction useRouter ({input, routes, redirects, web, onChange}) {\n  function getUrl () {\n    if (web) {\n      const {location} = window;\n      const {pathname, search} = location;\n      return `${pathname}${search}`;\n    } else {\n      return '/';\n    }\n  }\n\n  function setUrlAndPushState (url) {\n    setUrl(url);\n    if (web) {\n      window.history.pushState({}, '', url);\n    }\n  }\n\n  const [url, setUrl] = useState(getUrl());\n  const router = useMemo(()=> {\n    const router = new Router({routes, redirects});\n    router.onChange((new_url)=> {\n      if (new_url !== url) {\n        setUrlAndPushState(new_url);\n        if (onChange) {\n          onChange(url);\n        }\n      }\n    }, input);\n    return router;\n  });\n\n  useEffect(()=> {\n    if (!web) {\n      return ()=> {};\n    }\n\n    function onPopState () {\n      setUrl(url);\n    }\n\n    window.addEventListener('popstate', onPopState);\n    return ()=> {\n      window.removeEventListener('popstate', onPopState);\n    };\n  }, []);\n\n  const match = router.match({...input, url});\n  if (match.redirect) {\n    setUrlAndPushState(match.url);\n  }\n\n  return {\n    match,\n    router,\n    url\n  };\n}\n\nfunction useGo () {\n  const router = useContext(RouterContext);\n  return function go (args) {\n    return router.go(args);\n  };\n}\n\nexport {\n  RouterContext,\n  useRouter,\n  useGo\n};\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  RouterContext,\n  useRouter\n} from './Hooks';\n\nexport default function RouterContainer ({input, routes, redirects, children, web, onChange}) {\n  const {router, match} = useRouter({input, routes, redirects, web, onChange});\n  return (\n    <RouterContext.Provider value={router}>\n      {children({match})}\n    </RouterContext.Provider>\n  );\n}\n\nRouterContainer.propTypes = {\n  input: PropTypes.object,\n  routes: PropTypes.object,\n  redirects: PropTypes.object,\n  web: PropTypes.bool,\n  children: PropTypes.func,\n  onChange: PropTypes.func\n};\n"],"names":["RouterContext","React","useRouter","input","routes","redirects","web","onChange","setUrlAndPushState","url","setUrl","window","history","pushState","useState","location","pathname","search","getUrl","router","useMemo","Router","new_url","useEffect","onPopState","addEventListener","removeEventListener","match","redirect","RouterContainer","children","React.createElement","Provider","value","propTypes","PropTypes","object","bool","func","useContext","args","go"],"mappings":"mlBASMA,EAAgBC,kBAEtB,SAASC,SAAYC,IAAAA,MAAOC,IAAAA,OAAQC,IAAAA,UAAWC,IAAAA,IAAKC,IAAAA,SAWlD,SAASC,EAAoBC,GAC3BC,EAAOD,GACHH,GACFK,OAAOC,QAAQC,UAAU,GAAI,GAAIJ,GAdwB,MAkBvCK,WAjBtB,WACE,GAAIR,EAAK,KACAS,EAAYJ,OAAZI,SAEP,SAD2BA,EAApBC,SAAoBD,EAAVE,OAGjB,MAAO,IAWoBC,IAAxBT,OAAKC,OACNS,EAASC,UAAQ,WACrB,IAAMD,EAAS,IAAIE,SAAO,CAACjB,OAAAA,EAAQC,UAAAA,IASnC,OARAc,EAAOZ,SAAS,SAACe,GACXA,IAAYb,IACdD,EAAmBc,GACff,GACFA,EAASE,KAGZN,GACIgB,IAGTI,YAAU,WACR,IAAKjB,EACH,oBAGF,SAASkB,IACPd,EAAOD,GAIT,OADAE,OAAOc,iBAAiB,WAAYD,cAElCb,OAAOe,oBAAoB,WAAYF,KAExC,IAEH,IAAMG,EAAQR,EAAOQ,aAAUxB,OAAOM,IAAAA,KAKtC,OAJIkB,EAAMC,UACRpB,EAAmBmB,EAAMlB,KAGpB,CACLkB,MAAAA,EACAR,OAAAA,EACAV,IAAAA,YC1DoBoB,SAA4CC,IAAAA,WAC1C5B,EAAU,CAACC,QADKA,MACEC,SADKA,OACGC,YADKA,UACMC,MADeA,IACVC,WADeA,WAEjF,OACEwB,gBAAC/B,EAAcgC,UAASC,QAFnBd,QAGFW,EAAS,CAACH,QAHAA,SAQjBE,EAAgBK,UAAY,CAC1B/B,MAAOgC,EAAUC,OACjBhC,OAAQ+B,EAAUC,OAClB/B,UAAW8B,EAAUC,OACrB9B,IAAK6B,EAAUE,KACfP,SAAUK,EAAUG,KACpB/B,SAAU4B,EAAUG,oDD+CtB,WACE,IAAMnB,EAASoB,aAAWvC,GAC1B,gBAAoBwC,GAClB,OAAOrB,EAAOsB,GAAGD"}