{"version":3,"file":"index.modern.js","sources":["../src/Hooks.js","../src/RouterContainer.js"],"sourcesContent":["import * as React from 'react';\nimport {\n  useContext,\n  useMemo,\n  useEffect,\n  useState\n} from 'react';\nimport {Router} from 'groutcho';\n\nconst RouterContext = React.createContext();\n\nfunction useRouter ({input, routes, redirects, web, onChange}) {\n  function getUrl () {\n    if (web) {\n      const {location} = window;\n      const {pathname, search} = location;\n      return `${pathname}${search}`;\n    } else {\n      return '/';\n    }\n  }\n\n  function setUrlAndPushState (url) {\n    setUrl(url);\n    if (web) {\n      window.history.pushState({}, '', url);\n    }\n  }\n\n  const [url, setUrl] = useState(getUrl());\n  const router = useMemo(()=> {\n    const router = new Router({routes, redirects});\n    router.onChange((new_url)=> {\n      if (new_url !== url) {\n        setUrlAndPushState(new_url);\n        if (onChange) {\n          onChange(url);\n        }\n      }\n    }, input);\n    return router;\n  });\n\n  useEffect(()=> {\n    if (!web) {\n      return ()=> {};\n    }\n\n    function onPopState () {\n      setUrl(url);\n    }\n\n    window.addEventListener('popstate', onPopState);\n    return ()=> {\n      window.removeEventListener('popstate', onPopState);\n    };\n  }, []);\n\n  const match = router.match({...input, url});\n  if (match.redirect) {\n    setUrlAndPushState(match.url);\n  }\n\n  return {\n    match,\n    router,\n    url\n  };\n}\n\nfunction useGo () {\n  const router = useContext(RouterContext);\n  return function go (args) {\n    return router.go(args);\n  };\n}\n\nexport {\n  RouterContext,\n  useRouter,\n  useGo\n};\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  RouterContext,\n  useRouter\n} from './Hooks';\n\nexport default function RouterContainer ({input, routes, redirects, children, web, onChange}) {\n  const {router, match} = useRouter({input, routes, redirects, web, onChange});\n  return (\n    <RouterContext.Provider value={router}>\n      {children({match})}\n    </RouterContext.Provider>\n  );\n}\n\nRouterContainer.propTypes = {\n  input: PropTypes.object,\n  routes: PropTypes.object,\n  redirects: PropTypes.object,\n  web: PropTypes.bool,\n  children: PropTypes.func,\n  onChange: PropTypes.func\n};\n"],"names":["RouterContext","React","useRouter","input","routes","redirects","web","onChange","setUrlAndPushState","url","setUrl","window","history","pushState","useState","location","pathname","search","getUrl","router","useMemo","Router","new_url","useEffect","onPopState","addEventListener","removeEventListener","match","redirect","useGo","useContext","args","go","RouterContainer","children","React.createElement","Provider","value","propTypes","PropTypes","object","bool","func"],"mappings":"+KASMA,MAAAA,EAAgBC,IAEtB,SAASC,GAAWC,MAACA,EAADC,OAAQA,EAARC,UAAgBA,EAAhBC,IAA2BA,EAA3BC,SAAgCA,IAWlD,SAASC,EAAoBC,GAC3BC,EAAOD,GACHH,GACFK,OAAOC,QAAQC,UAAU,GAAI,GAAIJ,GAIrC,MAAOA,EAAKC,GAAUI,EAjBtB,WACE,GAAIR,EAAK,CACP,MAAMS,SAACA,GAAYJ,QACbK,SAACA,EAADC,OAAWA,GAAUF,EAC3B,MAAQ,GAAEC,IAAWC,IAErB,MAAO,IAWoBC,IACzBC,EAASC,EAAQ,KACrB,MAAMD,EAAS,IAAIE,EAAO,CAACjB,OAAAA,EAAQC,UAAAA,IASnC,OARAc,EAAOZ,SAAUe,IACXA,IAAYb,IACdD,EAAmBc,GACff,GACFA,EAASE,KAGZN,GACIgB,IAGTI,EAAU,KACR,IAAKjB,EACH,MAAO,OAGT,SAASkB,IACPd,EAAOD,GAIT,OADAE,OAAOc,iBAAiB,WAAYD,GAC7B,KACLb,OAAOe,oBAAoB,WAAYF,KAExC,IAEH,MAAMG,EAAQR,EAAOQ,MAAM,IAAIxB,EAAOM,IAAAA,IAKtC,OAJIkB,EAAMC,UACRpB,EAAmBmB,EAAMlB,KAGpB,CACLkB,MAAAA,EACAR,OAAAA,EACAV,IAAAA,GAIJ,SAASoB,IACP,MAAMV,EAASW,EAAW9B,GAC1B,gBAAoB+B,GAClB,OAAOZ,EAAOa,GAAGD,aCjEGE,GAAiB9B,MAACA,EAADC,OAAQA,EAARC,UAAgBA,EAAhB6B,SAA2BA,EAA3B5B,IAAqCA,EAArCC,SAA0CA,IACjF,MAAMY,OAACA,EAADQ,MAASA,GAASzB,EAAU,CAACC,MAAAA,EAAOC,OAAAA,EAAQC,UAAAA,EAAWC,IAAAA,EAAKC,SAAAA,IAClE,OACE4B,EAACnC,EAAcoC,UAASC,MAAOlB,GAC5Be,EAAS,CAACP,MAAAA,KAKjBM,EAAgBK,UAAY,CAC1BnC,MAAOoC,EAAUC,OACjBpC,OAAQmC,EAAUC,OAClBnC,UAAWkC,EAAUC,OACrBlC,IAAKiC,EAAUE,KACfP,SAAUK,EAAUG,KACpBnC,SAAUgC,EAAUG"}